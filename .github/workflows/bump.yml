name: Deploy to Github Container Registry

on:
  push:
    branches:
      - master

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: v
    outputs:
      new-app-version: ${{ steps.tag-version.outputs.new_version }}
      
  build-and-push:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      # Check out the repository
      - name: Check out repository
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/openai-telegram-bot:${{ needs.bump-version.outputs.new-app-version }}
            ghcr.io/${{ github.repository_owner }}/openai-telegram-bot:latest

      # Create the new release on GitHub
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
