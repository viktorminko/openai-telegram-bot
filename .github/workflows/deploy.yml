name: Deploy to Github Container Registry

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Check out repository
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get the latest release tag
      - name: Get latest release
        id: latest_release
        run: |
          LATEST_RELEASE_TAG=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | jq -r '.tag_name')
          echo "::set-output name=latest_release_tag::$LATEST_RELEASE_TAG"

      # Generate the new release tag (incrementing the last part of the version number)
      - name: Generate new release tag
        id: generate_tag
        run: |
          LATEST_RELEASE_TAG=${{ steps.latest_release.outputs.latest_release_tag }}
          VERSION=$(echo $LATEST_RELEASE_TAG | awk -F. -v OFS=. '{$NF = sprintf("%0*d", length($NF), ($NF+1)); print}')
          echo "RELEASE_TAG=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=release_tag::$VERSION"

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/openai-telegram-bot:${{ steps.generate_tag.outputs.release_tag }}

      # Create the new release on GitHub
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_tag.outputs.release_tag }}
          release_name: Release ${{ steps.generate_tag.outputs.release_tag }}
          draft: false
          prerelease: false
